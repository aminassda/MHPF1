[comment encoding = UTF-8 /]
[module generateVotingClassifier('http://www.example.org/ssda_research')]
[template public generateVotingClassifier(aVotingClassifier : VotingClassifier)]
[comment @main/]
[file (aVotingClassifier.eClass().name.concat('.ipynb'), false, 'UTF-8')]

[aVotingClassifier.cv.eClass()->select(name='KFold').name.concat('=')/][aVotingClassifier.cv.eClass()->select(name='KFold').name.concat('(')/][aVotingClassifier.cv.eClass()->select(name='KFold').eAttributes.name.concat('=').concat('3').concat(',')/][aVotingClassifier.eClass().eSuperTypes.eAttributes.name.concat('=').concat('17').concat(',')/][aVotingClassifier.cv.eClass().eSuperTypes.eAttributes->select(name='shuffle').name.concat('=').concat('True').concat(')')/]
[aVotingClassifier.eClass().name.concat('=')/][aVotingClassifier.eClass().name.concat('(')/][aVotingClassifier.eClass().eAttributes->select(name='estimators').name.concat('=').concat('[(').concat('"')/][aVotingClassifier.eClass().siblings(EClass)->select(name='RandomForestClassifier').name.concat('"').concat(',')/][aVotingClassifier.eClass().siblings(EClass)->select(name='RandomForestClassifier').name.concat(')').concat(',').concat('(').concat('"')/][aVotingClassifier.eClass().siblings(EClass)->select(name='GaussianNB').name.concat('"').concat(',')/][aVotingClassifier.eClass().siblings(EClass)->select(name='GaussianNB').name.concat(')').concat(',').concat('(').concat('"')/][aVotingClassifier.eClass().siblings(EClass)->select(name='GradientBoostingClassifier').name.concat('"').concat(',')/][aVotingClassifier.eClass().siblings(EClass)->select(name='GradientBoostingClassifier').name.concat(')').concat(']').concat(')').concat('\n').concat('labels=').concat('["')/][aVotingClassifier.eClass().siblings(EClass)->select(name='GaussianNB').name.concat('"').concat(',').concat('"')/][aVotingClassifier.eClass().siblings(EClass)->select(name='GradientBoostingClassifier').name.concat(',').concat('"').concat('"')/][aVotingClassifier.eClass().siblings(EClass)->select(name='RandomForestClassifier').name.concat('"').concat(',').concat('"')/][aVotingClassifier.eClass().name.concat('"').concat(']').concat('\n')/]
for algo, labels in zip [aVotingClassifier.eClass().siblings(EClass)->select(name='GaussianNB').name.prefix('([').concat(',')/][aVotingClassifier.eClass().siblings(EClass)->select(name='GradientBoostingClassifier').name.concat(',')/][aVotingClassifier.eClass().siblings(EClass)->select(name='RandomForestClassifier').name.concat(',')/][aVotingClassifier.eClass().name.concat(']').concat(',labels):').concat('\n').concat('print').concat('(').concat('"').concat('Accuracy of Voting classifier').concat('"').concat(',')/][aVotingClassifier.eClass().eSuperTypes.siblings(EClass)->select(name='Performance_Evaluation').eOperations->select(name='accuracy_score').name.concat('.').concat('mean').concat('()').concat(')')/]
[aVotingClassifier.eClass().eSuperTypes.eReferences.eReferenceType->select(name='DiabetesPrediction').name.concat('=')/][aVotingClassifier.cv.eClass()->select(name='KFold').eSuperTypes.eOperations->select(name='cross_val_predict').name.concat('(')/][aVotingClassifier.eClass().name.concat(',').concat('x2').concat(',').concat('y2').concat(',')/][aVotingClassifier.cv.eClass().eSuperTypes.eAttributes->select(name='cv').name.concat('=')/][aVotingClassifier.cv.eClass()->select(name='KFold').name.concat(')')/]
[aVotingClassifier.pred.evaluated.eClass().eOperations->select(name='accuracy_score').name.concat('(')/][aVotingClassifier.pred.eClass().name.concat(',').concat('y2').concat(')')/]
[/file]
[/template]
