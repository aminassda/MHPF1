[comment encoding = UTF-8 /] 
[module generateLogisticRegression('http://www.example.org/ssda_research')] 
[template public generateLogisticRegression(aLogisticRegression : LogisticRegression)] 
[comment @main/] [file (aLogisticRegression.eClass().name.concat('.ipynb'), false, 'UTF-8')] 
[aLogisticRegression.eClass().name.concat('=')/][aLogisticRegression.eClass().name.concat('(')/][aLogisticRegression.eClass().eSuperTypes.eAttributes.name.concat('= 0').concat(')')/] 
[aLogisticRegression.eClass().eAttributes->select(name='solvers').name.concat('=').concat('[')/][aLogisticRegression.solver.concat(']')/] 
[aLogisticRegression.eClass()->select(name='LogisticRegression').eAttributes->select(name='penalty').name.concat('=').concat('[').concat('"')/][aLogisticRegression.penalty.toString().concat('"').concat(']')/] 
[aLogisticRegression.eClass()->select(name='LogisticRegression').eAttributes->select(name='c_values').name.concat('=').concat('[')/][aLogisticRegression.C.concat(']')/] 
grid = dict(solver=[aLogisticRegression.eClass()->select(name='LogisticRegression').eAttributes->select(name='solvers').name/],penalty=[aLogisticRegression.eClass()->select(name='LogisticRegression').eAttributes->select(name='penalty').name/],C=[aLogisticRegression.eClass()->select(name='LogisticRegression').eAttributes->select(name='c_values').name/]) 
[aLogisticRegression.eClass().eSuperTypes.siblings(EClass)->select(name='GridSearchCV').name.prefix('gsLD=').concat('(')/][aLogisticRegression.eClass().eSuperTypes.siblings(EClass)->select(name='ModelOptimization').eReferences->select(name='estimator').name.concat('=')/][aLogisticRegression.eClass().name.concat(',')/][aLogisticRegression.eClass().eSuperTypes.siblings(EClass)->select(name='ModelOptimization').eAttributes->select(name='param_grid').name.concat('=').concat('grid').concat(')')/] 
[aLogisticRegression.eClass().eSuperTypes.siblings(EClass)->select(name='ModelOptimization').eOperations->select(name='fit').name.prefix('gsLD.').concat('(')/][aLogisticRegression.splits.eClass()->select(name='Train_data').eAttributes->select(name='X_train').name.concat(',')/][aLogisticRegression.splits.eClass()->select(name='Train_data').eAttributes->select(name='Y_train').name.concat(')')/]
[aLogisticRegression.pred.eClass().name.concat('=')/][aLogisticRegression.eClass().eSuperTypes.siblings(EClass)->select(name='ModelOptimization').eOperations->select(name='predict').name.prefix('gsLD.').concat('(')/][aLogisticRegression.splits.eClass()->select(name='Test_data').eAttributes->select(name='X_test').name.concat(')')/]

[aLogisticRegression.eClass().eSuperTypes.siblings(EClass)->select(name='Performance_Evaluation').eOperations->select(name='confusion_matrix').name.concat('(')/][aLogisticRegression.pred.eClass().name.concat(',')/][aLogisticRegression.splits.eClass()->select(name='Test_data').eAttributes->select(name='Y_test').name.concat('))')/]
[aLogisticRegression.eClass().eSuperTypes.siblings(EClass)->select(name='Performance_Evaluation').eOperations->select(name='classification_report').name.prefix('print(').concat('(gsLD').concat('.')/][aLogisticRegression.eClass().eSuperTypes.eOperations->select(name='predict').name.concat('(')/][aLogisticRegression.splits.eClass()->select(name='Train_data').eAttributes->select(name='X_train').name.concat(')').concat(',')/][aLogisticRegression.splits.eClass()->select(name='Train_data').eAttributes->select(name='Y_train').name.concat('))')/]
[aLogisticRegression.eClass().eSuperTypes.siblings(EClass)->select(name='Performance_Evaluation').eOperations->select(name='classification_report').name.concat('(').prefix('print(')/][aLogisticRegression.pred.eClass().name.concat(',')/][aLogisticRegression.splits.eClass()->select(name='Test_data').eAttributes->select(name='Y_test').name.concat(')')/]

[/file] [/template]