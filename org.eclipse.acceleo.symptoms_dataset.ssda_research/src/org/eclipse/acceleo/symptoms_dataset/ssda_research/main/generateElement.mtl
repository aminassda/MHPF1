[comment encoding = UTF-8 /]
[module generateElement('http://www.example.org/ssda_research')]
[template public generateElement(aDiabeticRecommendationSystem : DiabeticRecommendationSystem)]
[comment @main/]
[file (aDiabeticRecommendationSystem.eClass().name.concat('.ipynb'), false, 'UTF-8')]
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import [aDiabeticRecommendationSystem.cv.eClass()->select(name='train_test_split').name/]
from sklearn.preprocessing import [aDiabeticRecommendationSystem.dpreprocess.eClass()->select(name='StandardScaler').name/]
from sklearn.linear_model import [aDiabeticRecommendationSystem.estimators.eClass()->select(name='LogisticRegression').name/]
from sklearn.svm import [aDiabeticRecommendationSystem.estimators.eClass()->select(name='SVC').name/]
from sklearn.neighbors import [aDiabeticRecommendationSystem.estimators.eClass()->select(name='KNeighborsClassifier').name/]
from sklearn.naive_bayes import [aDiabeticRecommendationSystem.estimators.eClass()->select(name='GaussianNB').name/]
from sklearn.ensemble import [aDiabeticRecommendationSystem.estimators.eClass()->select(name='RandomForestClassifier').name/]
from sklearn.metrics import [aDiabeticRecommendationSystem.pred.evaluated.eClass().eOperations->select(name='accuracy_score').name.concat(',')/][aDiabeticRecommendationSystem.pred.evaluated.eClass().eOperations->select(name='confusion_matrix').name.concat(',')/][aDiabeticRecommendationSystem.pred.evaluated.eClass().eOperations->select(name='classification_report').name/]
from sklearn.model_selection import [aDiabeticRecommendationSystem.model_op.eClass()->select(name='GridSearchCV').name/]
from sklearn.neural_network import [aDiabeticRecommendationSystem.estimators.eClass()->select(name='MLPClassifier').name/]

[aDiabeticRecommendationSystem.dataset.eClass().name.concat('=')/]pd.[aDiabeticRecommendationSystem.eda.eClass().siblings(EClass)->select(name='DatasetDeclaration').eOperations->select(name='read_csv').name->asSet().concat('(').concat('"diabetes.')/][aDiabeticRecommendationSystem.dataset.type.concat('"').concat(')')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('.')/][aDiabeticRecommendationSystem.eda.eClass().siblings(EClass)->select(name='DatasetDeclaration').eOperations->select(name='head').name.concat('()')->asSet()/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('.')/][aDiabeticRecommendationSystem.eda.eClass().siblings(EClass)->select(name='DatasetDeclaration').eOperations->select(name='dtypes').name.concat('()')->asSet()/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass()->select(name='MissingValues').eOperations.name.concat('()').concat('.').concat('sum()')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dataset.accessible_to.eClass().eAttributes->select(name='gender').name->asSet().concat('"]').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dataset.accessible_to.eClass().eAttributes->select(name='gender').name->asSet().concat('"]').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({').concat('"')/][aDiabeticRecommendationSystem.patient.gender->closure('Male').concat('"').concat(':').concat('1').concat(',')/][aDiabeticRecommendationSystem.patient.gender->closure('Female').concat('"').concat(':').concat('0').concat('})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["').concat('class').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["').concat('class').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Positive:1,Negative:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('Polyuria').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('Polyuria').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('polydipsia').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('polydipsia').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('sudden weight loss').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('sudden weight loss').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('weakness').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('weakness').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('polyphagia').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('polyphagia').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('Genital thrush').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('Genital thrush').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('visual blurring').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('visual blurring').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('Itching').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('Itching').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('Irritability').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('Irritability').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('delayed healing').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('delayed healing').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('muscle stiffness').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('muscle stiffness').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('Alopecia').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('Alopecia').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('Obesity').concat('"').concat(']').concat('=')/][aDiabeticRecommendationSystem.dataset.eClass().name.concat('["')/][aDiabeticRecommendationSystem.dpreprocess.dataset.accessible_to.symptom_name->closure('obesity').concat('"').concat(']').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().eSuperTypes->select(name='Encoding').eOperations->select(name='map').name.concat('({Yes:1,No:0})')/]

ax,fig = plt.subplots(figsize=(15,8))
sns.heatmap([aDiabeticRecommendationSystem.dataset.eClass().name->asSet().prefix('(').concat('.')/][aDiabeticRecommendationSystem.dpreprocess.eClass().siblings(EClass)->select(name='FeaturesSelection').siblings(EClass)->select(name='Pearson_Correlation').eOperations->select(name='corr').name->asSet().concat('()').concat(',').concat('annot=True)')/]

[aDiabeticRecommendationSystem.dataset.eClass().name.prefix('X=').concat('.').concat('iloc[:,0:-1]')/]
[aDiabeticRecommendationSystem.dataset.eClass().name.prefix('Y=').concat('.').concat('iloc[:,-1]')/]

[aDiabeticRecommendationSystem.cv.splits.eClass()->select(name='Train_data').eAttributes->select(name='X_train').name.concat(',')/][aDiabeticRecommendationSystem.cv.splits.eClass()->select(name='Test_data').eAttributes->select(name='X_test').name.concat(',')/][aDiabeticRecommendationSystem.cv.splits.eClass()->select(name='Train_data').eAttributes->select(name='Y_train').name.concat(',')/][aDiabeticRecommendationSystem.cv.splits.eClass()->select(name='Test_data').eAttributes->select(name='Y_test').name.concat('=')/][aDiabeticRecommendationSystem.cv.eClass()->select(name='TrainTestSplit').eOperations.name.concat('(').concat('X,Y').concat(',')/][aDiabeticRecommendationSystem.cv.eClass()->select(name='TrainTestSplit').eAttributes->select(name='test_size').name.concat('=').concat('0.2').concat(',')/][aDiabeticRecommendationSystem.cv.splits.eClass()->select(name='Test_data').eAttributes->select(name='test_size').name.concat('=0.2').concat(',')/][aDiabeticRecommendationSystem.cv.eClass().eSuperTypes.eSuperTypes.eAttributes->select(name='random_state').name.toString().concat('= 0').concat(')')/]
[aDiabeticRecommendationSystem.dpreprocess.eClass().siblings(EClass)->select(name='StandardScaler').name->asSet().prefix('ss=').concat('()')/]
[aDiabeticRecommendationSystem.dpreprocess.eClass().siblings(EClass).eSuperTypes->select(name='FeatureScaling').eOperations->select(name='fit_transform').name->asSet().prefix('ss.').concat('(')/][aDiabeticRecommendationSystem.cv.splits.eClass()->select(name='Train_data').eAttributes->select(name='X_train').name.concat(')')/]
[aDiabeticRecommendationSystem.dpreprocess.eClass().siblings(EClass).eSuperTypes->select(name='FeatureScaling').eOperations->select(name='transform').name->asSet().prefix('ss.').concat('(')/][aDiabeticRecommendationSystem.cv.splits.eClass()->select(name='Test_data').eAttributes->select(name='X_test').name.concat(')')/]

[/file]
[/template]
